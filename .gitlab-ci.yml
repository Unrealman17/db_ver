stages:
  - prepare
  - triggers
  - deploy
  - clean
  - clean_db
  - autotest
  - push-to-github

variables:
 ENV:
   value: "reclada-par-chi-test" # this would be the default value
   description: "This variable makes cakes delicious" # makes this variable appear on the Run Pipeline 
 WEBUI_VERSION:
   value: "test_parent_child" # this would be the default value
   description: "This variable makes cakes delicious" # makes this variable appear on the Run Pipeline    
 RUNTIME_VERSION:
   value: "test_parent_child" # this would be the default value
   description: "This variable makes cakes delicious" # makes this variable appear on the Run Pipeline 
 SCINLP_VERSION:
   value: "test_parent_child" # this would be the default value
   description: "This variable makes cakes delicious" # makes this variable appear on the Run Pipeline 


prepare_db:
  stage: prepare
  image: bitnami/git
  script:
    - echo $CI_OPEN_MERGE_REQUESTS
    - echo "DEV_RDS=dev-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com" >> prepare.env
    - echo "TEST_RDS=test-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com" >> prepare.env
    - echo "PROD_RDS=prod-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com" >> prepare.env
    # - echo LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`) >> prepare.env
    #- echo ENV=$(echo $CI_COMMIT_REF_NAME | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]') >> prepare.env
    #- export ENV=$(echo $CI_COMMIT_REF_NAME | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]') >> prepare.env
    - echo ENV=$ENV >> prepare.env
    - export ENV=$ENV >> prepare.env
    - echo $ENV # check the var
    - echo NAMESPACE = reclada-$ENV >> prepare.env
    - echo DBNAME = "${ENV}_reclada_k8s" >> prepare.env 
    - echo LAMBDA_NAME = "s3_get_presigned_url_${ENV}" >> prepare.env
    - echo LAMBDA_REGION = "eu-west-1" >> prepare.env
    #debug
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  artifacts:
    reports:
      dotenv: prepare.env
  rules:
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: always  
  tags:
    - k8s-devops

deploy-dynamic-env:
  stage: deploy
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/db-installer:0.1
  script:
    - echo "Create database for dynamic env"

    - cp $CI_PROJECT_DIR/update/update_config_template.json $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"branch_db\" :.*|\"branch_db\" :\ \"$CI_COMMIT_REF_NAME\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"server\" :.*|\"server\" :\ \"$DEV_RDS\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"db\" :.*|\"db\" :\ \"$DBNAME\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"db_user\" :.*|\"db_user\" :\ \"reclada\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"db_URI\" :.*|\"db_URI\" :\ \"postgresql://reclada:${PGPASSWORD}@${DEV_RDS}:5432/${DBNAME}\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"LAMBDA_NAME\" :.*|\"LAMBDA_NAME\" :\ \"$LAMBDA_NAME\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"LAMBDA_REGION\" :.*|\"LAMBDA_REGION\" :\ \"$LAMBDA_REGION\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"ENVIRONMENT_NAME\" :.*|\"ENVIRONMENT_NAME\" :\ \"K8S\",|g" $CI_PROJECT_DIR/update/update_config.json

    - cat $CI_PROJECT_DIR/update/update_config.json

    - sed -i "s|gitlab.reclada.com|gitlab-ci-token:$CI_JOB_TOKEN@gitlab.reclada.com|g" $CI_PROJECT_DIR/update/update_db.py
    - cat $CI_PROJECT_DIR/update/update_db.py

    - python --version
    - psql -V
    - cd $CI_PROJECT_DIR/update && psql -t -P pager=off -c "select max(ver) from dev.ver;" $(python -c "from update_db import db_URI;print(db_URI)") && python $CI_PROJECT_DIR/update/update_db.py || python $CI_PROJECT_DIR/update/install_db.py
  needs:
    - job: prepare_db
      artifacts: true
  tags:
    - k8s-devops
  rules:
  - if: $CI_COMMIT_MESSAGE =~ /^delenv/
    when: never    
  - if: $CI_COMMIT_REF_NAME == "test_parent_child"
    when: always
  - if: $CI_COMMIT_REF_NAME == "master"
    when: never
  - if: $CI_COMMIT_REF_NAME == "test"
    when: never

trigger_runtime:
  stage: triggers
  variables:
    ENV: $ENV
  trigger:
    include:
      - project: 'developers/reclada-runtime'
        ref: '$RUNTIME_VERSION'
        file: '.child_runtime-gitlab-ci.yml' 
    strategy: depend
  rules:
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: manual
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never    

trigger_scinlp:
  stage: triggers
  variables:
    ENV: $ENV
  trigger:
    include:
      - project: 'developers/scinlp'
        ref: '$SCINLP_VERSION'
        file: '.child_scinlp-gitlab-ci.yml' 
    strategy: depend
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: manual

trigger_webui:
  stage: triggers
  variables:
    ENV: $ENV
  trigger:
    include:
      - project: 'developers/webui'
        ref: '$WEBUI_VERSION'
        file: '.child_webui-gitlab-ci.yml' 
    strategy: depend
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: manual 

deploy-autotest-env:
  stage: deploy
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/db-installer:0.1
  script:
    - echo "Run update database in autotest env"
    
    - cp $CI_PROJECT_DIR/update/update_config_template.json $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"branch_db\" :.*|\"branch_db\" :\ \"$CI_COMMIT_REF_NAME\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"server\" :.*|\"server\" :\ \"$TEST_RDS\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"db\" :.*|\"db\" :\ \"autotest_reclada_k8s\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"db_user\" :.*|\"db_user\" :\ \"reclada\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"db_URI\" :.*|\"db_URI\" :\ \"postgresql://reclada:${PGPASSWORD}@${TEST_RDS}:5432/autotest_reclada_k8s\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"LAMBDA_NAME\" :.*|\"LAMBDA_NAME\" :\ \"s3_get_presigned_url_autotest\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"LAMBDA_REGION\" :.*|\"LAMBDA_REGION\" :\ \"$LAMBDA_REGION\",|g" $CI_PROJECT_DIR/update/update_config.json
    - sed -i "s|\"ENVIRONMENT_NAME\" :.*|\"ENVIRONMENT_NAME\" :\ \"K8S\",|g" $CI_PROJECT_DIR/update/update_config.json

    - cat $CI_PROJECT_DIR/update/update_config.json

    - sed -i "s|gitlab.reclada.com|gitlab-ci-token:$CI_JOB_TOKEN@gitlab.reclada.com|g" $CI_PROJECT_DIR/update/update_db.py
    - cat $CI_PROJECT_DIR/update/update_db.py

    - python --version
    - psql -V
    - cd $CI_PROJECT_DIR/update && psql -t -P pager=off -c "select max(ver) from dev.ver;" $(python -c "from update_db import db_URI;print(db_URI)") && python $CI_PROJECT_DIR/update/update_db.py || python $CI_PROJECT_DIR/update/install_db.py
  needs:
    - job: prepare_db
      artifacts: true
  tags:
      - k8s-devops
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never
    - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
      when: always
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: never
    - if: $CI_COMMIT_REF_NAME == "master"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never

test-autotest-env:
  stage: autotest
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/pytest:04
  script:
    - echo "Run some tests for autotest env"

    - export TEST_PARAMETERS_BUCKET="autotest-reclada-bucket"
    - export TEST_PARAMETERS_DATABASE="${TEST_RDS}/autotest_reclada_k8s"
    - export TEST_PARAMETERS_DATABASE_USER="reclada"
    - export TEST_PARAMETERS_DATABASE_PASSWORD="${PG_PASSWORD}"
    # - AWS_ACCESS_KEY_ID = AWS_ACCESS_KEY_ID
    # - AWS_SECRET_ACCESS_KEY = AWS_SECRET_KEY
    # - TEST_PARAMETERS_WEB_BASE_URL = base_url_of_application
    # - TEST_PARAMETERS_WEB_USER = user_for_web_and_rest
    # - TEST_PARAMETERS_WEB_PASSWORD = password_for_web_and_rest

    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.reclada.com/developers/QAAutotests.git
    - cd QAAutotests

    - pytest --version
    - allure --version

    - pytest tests --alluredir allure-results > /dev/null 2>&1 || true
    - allure generate -c ./allure-results -o ./allure-report
    - ls -la ./allure-results
    - ls -la ./allure-report
  allow_failure: true
  artifacts:
    when: always
    paths:
      - QAAutotests/allure-results/
      - QAAutotests/allure-report/
    expire_in: 7 day
  needs:
    - job: deploy-autotest-env
    - job: prepare_db
      artifacts: true
  tags:
      - k8s-devops
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never
    - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
      when: always
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: never
    - if: $CI_COMMIT_REF_NAME == "master"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never

delete-terraform-dynamic-env:
  stage: clean
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/aws-build:v1.0.0-0
  script:
    - echo "Uninstall lambda/S3"
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.reclada.com/developers/reclada-runtime.git
    - cd $CI_PROJECT_DIR/reclada-runtime/devops/terraform/
    - sed -i "s|PGPASSWORD|$PG_PASSWORD|g" $CI_PROJECT_DIR/reclada-runtime/devops/terraform/variables.tf
    - sed -i "s|ENVPREFIX|$ENV|g" $CI_PROJECT_DIR/reclada-runtime/devops/terraform/variables.tf
    - sed -i "s|RDSINSTANCE|dev-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com|g" $CI_PROJECT_DIR/reclada-runtime/devops/terraform/variables.tf
    - cat $CI_PROJECT_DIR/reclada-runtime/devops/terraform/variables.tf
    - ./terraform init
    - ./terraform workspace list
    - ./terraform workspace select ${ENV} || ./terraform workspace new ${ENV}
    - ./terraform destroy -target=aws_s3_bucket_notification.bucket_notification -auto-approve
    - ./terraform destroy -target=aws_lambda_permission.allow_bucket -auto-approve
    - ./terraform destroy -target=aws_s3_bucket_object.output_folder -auto-approve
    - ./terraform destroy -target=aws_s3_bucket_object.inbox_folder -auto-approve
    - ./terraform destroy -target=aws_s3_bucket_policy.AllowPublicRead -auto-approve
    - ./terraform destroy -target=aws_s3_bucket.bucket -auto-approve
    - ./terraform destroy -target=aws_lambda_function.s3_create_datasource_in_db -auto-approve
    - ./terraform destroy -target=aws_iam_role.iam_for_lambda -auto-approve
    - ./terraform destroy -target=module.lambda_function -auto-approve    
  needs:
    - job: prepare_db
      artifacts: true
  rules:
    - if: $CI_MERGE_REQUEST_ID =~ /^./ 
      when: never
    - if: $CI_COMMIT_REF_NAME == "test_parent_child" 
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: always
    - if: $CI_COMMIT_REF_NAME == "master"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never
  tags:
    - k8s-devops

delete-db-dynamic-env:
  stage: clean_db
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/db-installer:0.1
  script:
    - echo "Uninstall db"
    - echo $CI_COMMIT_MESSAGE
    - psql -h dev-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com -p 5432 -U reclada -d postgres -c "DROP DATABASE $ENV_reclada_k8s;" || true
  needs:
    - job: delete-terraform-dynamic-env
    - job: prepare_db
      artifacts: true
  rules:
    - if: $CI_MERGE_REQUEST_ID =~ /^./ 
      when: never
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: always
    - if: $CI_COMMIT_REF_NAME == "master"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never
  tags:
    - k8s-devops

push-to-github:
  stage: push-to-github
  image: bitnami/git
  script:
    - echo "Run push to github"
    - git remote set-url origin https://gitlab:${MY_GITHUB_TOKEN}@github.com/reclada/${CI_PROJECT_NAME}.git
    - rm -rf .gitlab-ci.yml
    - rm -rf devops/
    - git config --global user.email "Gitlab@reclada.com"
    - git config --global user.name "Gitlab runner"
    - git add .
    - git commit -am "${CI_COMMIT_MESSAGE}"
    - git remote --verbose
    - git push origin HEAD:$CI_COMMIT_REF_NAME --force
  needs:
    - job: prepare_db
  tags:
      - k8s-devops
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: always
    - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
      when: never
    - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test_parent_child"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never 
